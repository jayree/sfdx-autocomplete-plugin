import { Command } from '@oclif/core';
import { AutocompleteBase } from '../../base.js';
export default class Create extends AutocompleteBase {
    static aliases: string[];
    static hidden: boolean;
    static readonly description = "create autocomplete setup scripts and completion functions";
    private _commands?;
    get bashSetupScriptPath(): string;
    get bashCommandsListPath(): string;
    get zshSetupScriptPath(): string;
    get zshCompletionSettersPath(): string;
    get bashSetupScript(): string;
    get zshSetupScript(): string;
    get completionDotsFunc(): string;
    get bashCommandsList(): string;
    get zshCompletionSetters(): string;
    private get fishSetupScriptPath();
    private get fishCompletionFunctionPath();
    private get skipEllipsis();
    private get envAnalyticsDir();
    private get envCommandsPath();
    private get bashFunctionsDir();
    private get zshFunctionsDir();
    private get zshCompletionFunctionPath();
    private get bashCompletionFunctionPath();
    private get zshCommandsSetter();
    private get zshCommandsFlagsSetters();
    private get commands();
    private get bashCommandsWithFlagsList();
    private get bashCompletionFunction();
    private get zshCompletionFunction();
    run(): Promise<void>;
    genCmdPublicFlags(command: Command.Cached): string;
    genCmdWithDescription(command: Command.Cached): string;
    genZshCmdFlagsSetter(command: Command.Cached): string;
    genZshAllCmdsListSetter(cmdsWithDesc: string[]): string;
    private ensureDirs;
    private createFiles;
    private fishSetupScript;
    private wantsLocalFiles;
    private wantsLocalDirs;
}
