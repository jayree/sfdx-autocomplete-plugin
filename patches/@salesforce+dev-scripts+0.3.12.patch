diff --git a/node_modules/@salesforce/dev-scripts/bin/sfdx-compile.js b/node_modules/@salesforce/dev-scripts/bin/sfdx-compile.js
index d9f31b6..43e1026 100755
--- a/node_modules/@salesforce/dev-scripts/bin/sfdx-compile.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sfdx-compile.js
@@ -10,7 +10,8 @@ const shell = require('../utils/shelljs');
 
 const exists = require('../utils/exists');
 const packageRoot = require('../utils/package-path');
-const tsc = require.resolve('typescript/bin/tsc');
+const path = require('path');
+const tsc = path.resolve(require.resolve('typescript'),'../../../','.bin','tsc');
 
 shell.exec(`${tsc} -p . --pretty`, {
   cwd: packageRoot
diff --git a/node_modules/@salesforce/dev-scripts/bin/sfdx-test.js b/node_modules/@salesforce/dev-scripts/bin/sfdx-test.js
index 981a56d..cb3c7b3 100755
--- a/node_modules/@salesforce/dev-scripts/bin/sfdx-test.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sfdx-test.js
@@ -11,7 +11,8 @@ const shell = require('../utils/shelljs');
 const packageRoot = require('../utils/package-path');
 const SfdxDevConfig = require('../utils/sfdx-dev-config');
 
-const nyc = require.resolve('nyc/bin/nyc');
+const path = require('path');
+const nyc = path.resolve(require.resolve('nyc'), '../../', '.bin', 'nyc');
 
 const config = new SfdxDevConfig(packageRoot);
 const testConfig = config.get('test') || {};
diff --git a/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js b/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
index 36c9e8c..ba3ff1d 100644
--- a/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
+++ b/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
@@ -11,14 +11,25 @@ const SfdxDevConfig = require('./sfdx-dev-config');
 
 module.exports = (projectPath, inLernaProject) => {
   const pjson = new PackageJson(projectPath);
+  const pjson_devconfig = new PackageJson(process.cwd() + '/node_modules/@salesforce/dev-config');
+
 
   log(`Checking dependencies for ${pjson.name}`);
 
   const config = new SfdxDevConfig(projectPath);
   const dependencies = pjson.get('devDependencies');
+  const dependencies_devconfig = pjson_devconfig.get('dependencies');
 
   const added = [];
   const removed = [];
+  const synced = [];
+    
+  const sync = name => {
+    if (dependencies[name] !== dependencies_devconfig[name]) {
+      +synced.push(name + ' ' + dependencies[name] + ' => ' + dependencies_devconfig[name]);
+      dependencies[name] = dependencies_devconfig[name];
+    } 
+  };
 
   const remove = name => {
     if (dependencies[name]) {
@@ -40,12 +51,13 @@ module.exports = (projectPath, inLernaProject) => {
 
   // Included by dev-scripts
   remove('nyc');
-  remove('typescript');
+  sync('typescript');
   remove('ts-node');
   remove('@commitlint/cli');
   remove('@commitlint/config-conventional');
   remove('source-map-support');
-  remove('tslint');
+  sync('tslint');
+  sync('tslint-microsoft-contrib');
   remove('xunit-file');
   remove('sinon');
   remove('mocha');
@@ -65,6 +77,11 @@ module.exports = (projectPath, inLernaProject) => {
     added.forEach(dep => log(dep, 2));
   }
 
+  if (synced.length > 0) {
+    log(`synced`);
+    synced.forEach(dep => log(dep, 2));
+  }
+
   pjson.write();
-  return added.length > 0;
+  return added.length > 0 || synced.length > 0;
 };
